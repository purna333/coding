/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> res=new ArrayList<>();
        if(root==null){
            return res;
        }
        Stack<TreeNode> s1=new Stack<>();
        s1.push(root);
        boolean forward=true;
        while(s1.size()!=0){
            Stack<TreeNode> s2=new Stack<>();
            List<Integer> level=new ArrayList<>();
            int size = s1.size();
            for(int i=0;i<size;i++){
                TreeNode curr=s1.pop();
                level.add(curr.val);

            
                if(forward){
                    if(curr.left!=null){
                        s2.push(curr.left);
                    }
                    if(curr.right!=null){
                        s2.push(curr.right);
                    }
                    
                    
                }
                else{
                    if(curr.right!=null){
                        s2.push(curr.right);
                    }
                    if(curr.left!=null){
                        s2.push(curr.left);
                    }
                }
            }
            res.add(level);
            s1=s2;
            forward =!forward;
        }
        return res;
        
    }
}
